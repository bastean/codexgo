services:
  broker-rabbit:
    container_name: ${BROKER_RABBIT_CONTAINER_NAME}
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${BROKER_RABBIT_ADMIN_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${BROKER_RABBIT_ADMIN_PASSWORD}
    ports:
      - ${BROKER_RABBIT_AMQP_PORT}:${BROKER_RABBIT_AMQP_PORT}
      - ${BROKER_RABBIT_ADMIN_PORT}:${BROKER_RABBIT_ADMIN_PORT}
    restart: ${BROKER_RABBIT_CONTAINER_RESTART}
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 12s
      timeout: 12s
      retries: 12

  database-mongo:
    container_name: ${DATABASE_MONGO_CONTAINER_NAME}
    image: mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_MONGO_ROOT_PASSWORD}
    command: mongod --quiet --logpath /dev/null
    ports:
      - ${DATABASE_MONGO_PORT}:${DATABASE_MONGO_PORT}
    volumes:
      - database-mongo:/data/db
    restart: ${DATABASE_MONGO_CONTAINER_RESTART}
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u ${DATABASE_MONGO_ROOT_USERNAME} -p ${DATABASE_MONGO_ROOT_PASSWORD} --quiet | grep 1
      interval: 12s
      timeout: 12s
      retries: 12

  codexgo:
    container_name: ${CODEXGO_CONTAINER_NAME}
    image: ${CODEXGO_IMAGE_TAG}
    build:
      context: ..
      dockerfile: deployments/Dockerfile
      target: ${CODEXGO_IMAGE_BUILD_TARGET}
    environment:
      BROKER_RABBIT_URI: "amqp://${BROKER_RABBIT_ADMIN_USERNAME}:${BROKER_RABBIT_ADMIN_PASSWORD}@broker-rabbit:${BROKER_RABBIT_AMQP_PORT}"
      BROKER_RABBIT_NAME: ${BROKER_RABBIT_NAME}
      DATABASE_MONGO_URI: "mongodb://${DATABASE_MONGO_ROOT_USERNAME}:${DATABASE_MONGO_ROOT_PASSWORD}@database-mongo:${DATABASE_MONGO_PORT}"
      DATABASE_MONGO_NAME: ${DATABASE_MONGO_NAME}
      CODEXGO_SMTP_HOST: ${CODEXGO_SMTP_HOST}
      CODEXGO_SMTP_PORT: ${CODEXGO_SMTP_PORT}
      CODEXGO_SMTP_USERNAME: ${CODEXGO_SMTP_USERNAME}
      CODEXGO_SMTP_PASSWORD: ${CODEXGO_SMTP_PASSWORD}
      CODEXGO_JWT_SECRET_KEY: ${CODEXGO_JWT_SECRET_KEY}
      CODEXGO_SERVER_URL: "${CODEXGO_SERVER_URL}:${CODEXGO_SERVER_GIN_PORT}"
      CODEXGO_SERVER_GIN_PORT: ${CODEXGO_SERVER_GIN_PORT}
      CODEXGO_SERVER_GIN_MODE: ${CODEXGO_SERVER_GIN_MODE}
      CODEXGO_SERVER_GIN_ALLOWED_HOSTS: ${CODEXGO_SERVER_GIN_ALLOWED_HOSTS}
      CODEXGO_SERVER_COOKIE_SECRET_KEY: ${CODEXGO_SERVER_COOKIE_SECRET_KEY}
      CODEXGO_SERVER_COOKIE_SESSION_NAME: ${CODEXGO_SERVER_COOKIE_SESSION_NAME}
    command: ${CODEXGO_CONTAINER_START}
    ports:
      - ${CODEXGO_SERVER_GIN_PORT}:${CODEXGO_SERVER_GIN_PORT}
      - ${CODEXGO_DEV_AIR_PROXY_PORT}:${CODEXGO_DEV_AIR_PROXY_PORT}
    volumes:
      - ${CODEXGO_CONTAINER_VOLUME}
      - codexgo-modules:/go/pkg/mod
    restart: ${CODEXGO_CONTAINER_RESTART}
    depends_on:
      broker-rabbit:
        condition: service_healthy
      database-mongo:
        condition: service_healthy

volumes:
  database-mongo:
    name: ${DATABASE_MONGO_CONTAINER_VOLUME}
  codexgo-logs:
    name: codexgo-logs
  codexgo-modules:
    name: codexgo-modules
