package home

const (
	VerifyFormTagID  = "verify-form"
	VerifyModalTagID = "verify-modal"
)

script VerifyFormInit(formTagID, loginTabTagID string) {
    $(`#${formTagID}`)
        .form({
            ...Form.Settings,
            fields: {
                Password: {
                    rules: [
                        ...Form.Rules.Password
                    ]
                }
            }
        })
        .api({
            action: "user_verify", 
            method: "PATCH",
            beforeSend: function(settings) {
                return Form.Token.Encode(settings, "VerifyToken")
            },
            onSuccess: function(response, element, xhr) {
                Form.Toast.Success(response)

                setTimeout(() => {
                    $.tab("change tab", loginTabTagID);
                    $(".ui.mini.modal").modal("hide");
                }, 1000);
            },
            onFailure: function(response, element, xhr) {
                Form.Toast.Failure(response)
            }
        })
    ;
}

templ VerifyForm() {
	<div id={ VerifyModalTagID } class="ui mini inverted modal">
		<div class="content">
			<form id={ VerifyFormTagID } class="ui inverted form">
				<h1 class="ui dividing inverted header">
					Verify your account
				</h1>
				<div class="required field">
					<label>Password</label>
					<div class="ui inverted transparent left icon input">
						<i class="lock icon"></i>
						<input type="password" placeholder="Password" name="Password"/>
					</div>
				</div>
				<div class="ui divider"></div>
				<div class="ui middle aligned center aligned grid">
					<div class="column">
						<button class="ui fluid primary submit button">Verify</button>
					</div>
				</div>
			</form>
		</div>
	</div>
	@VerifyFormInit(VerifyFormTagID, LoginTabTagID)
}
