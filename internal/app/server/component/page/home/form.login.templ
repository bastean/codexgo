package home

const (
	LoginFormTagID = "login-form"
)

script LoginFormInit(formTagID string) {
    $(`#${formTagID}`)
        .form({
            on: "blur",
            inline: true,
            preventLeaving: true,
            keyboardShortcuts: false,
            fields: {
                Login: {
                    rules: [
                        {
                            type: "notEmpty"
                        }
                    ]
                },
                Password: {
                    rules: [
                        {
                            type: "size[8..64]"
                        },
                        {
                            type: "regExp[/^.*[^0-9].*$/]",
                            prompt: "{name} cannot be only numbers"
                        }
                    ]
                }
            }
        })
        .api({
            action: "user_login", 
            method: "POST",
            beforeSend: function(settings) {
                let login = settings.data.Login;

                if (_.includes(login, "@")) {
                    settings.data.Email = login;
                } else {
                    settings.data.Username = login;
                }

                settings.data = JSON.stringify(settings.data);
        
                return settings;
            },
            onSuccess: function(response, element, xhr) {
                $.toast({
                    class: "success",
                    message: response.Message,
                    showProgress: "top"
                });

                _.delay(function() {
                    window.location.replace("/dashboard");
                }, 1000);
            },
            onFailure: function(response, element, xhr) {
                $.toast({
                    class: "error",
                    message: response.Message,
                    showProgress: "top"
                });
            }
        })
    ;
}

templ LoginForm() {
	<form id={ LoginFormTagID } class="ui inverted form">
		<h1 class="ui dividing inverted header">
			Sign in to your account
			<div class="sub header">Don't have an account? <a style="cursor: pointer;" onclick={ ShowTab(RegisterTabTagID) }>Sign up</a> | <a style="cursor: pointer;" onclick={ ShowModal(ForgotModalTagID) }>Forgot Password?</a></div>
		</h1>
		<div class="required field">
			<label>Email/Username</label>
			<div class="ui inverted transparent left icon input">
				<i class="sign in alt icon"></i>
				<input type="text" placeholder="Email/Username" name="Login"/>
			</div>
		</div>
		<div class="required field">
			<label>Password</label>
			<div class="ui inverted transparent left icon input">
				<i class="lock icon"></i>
				<input type="password" placeholder="Password" name="Password"/>
			</div>
		</div>
		<div class="ui divider"></div>
		<button class="ui fluid primary submit button">Sign in</button>
	</form>
	@LoginFormInit(LoginFormTagID)
}
